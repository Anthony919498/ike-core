---
- name: Check Helm repo bitnami
  command: |
    /usr/local/bin/linux-amd64/helm --kubeconfig \
    {{ data_path }}/certificates/configs/admin/admin.conf \
     repo list
  register: check_helm_repo_bitnami
  changed_when: false

- name: Helm install repo bitnami
  command: |
    /usr/local/bin/linux-amd64/helm --kubeconfig \
    {{ data_path }}/certificates/configs/admin/admin.conf \
    repo add bitnami https://charts.bitnami.com/bitnami
  when: >
    check_helm_repo_bitnami.stdout is not search("bitnami")

- name: Check harbor-redis Release
  command: |
    /usr/local/bin/linux-amd64/helm --kubeconfig \
    {{ data_path }}/certificates/configs/admin/admin.conf \
    list
  register: check_harbor_redis_release
  changed_when: false

- name: Install harbor-redis Release
  command: /usr/local/bin/linux-amd64/helm --kubeconfig \
    {{ data_path }}/certificates/configs/admin/admin.conf \
    install --name harbor-redis --namespace harbor \
    --set master.persistence.enabled=true --set master.persistence.storageClass=rook-ceph-block \
    --set slave.persistence.enabled=true --set slave.persistence.storageClass=rook-ceph-block \
    --set cluster.enabled=true --set cluster.slaveCount=3 \
    stable/redis
  when: >
    check_harbor_redis_release.stdout is not search("harbor-redis")

- name: Wait for Harbor-Redis HA Cluster to be deployed
  command: kubectl --kubeconfig {{ data_path }}/certificates/configs/admin/admin.conf get pod -n harbor harbor-redis-slave-2
  changed_when: false
  register: harbor_redis_cluster
  until: harbor_redis_cluster.stdout.find("1/1") != -1
  retries: 300
  delay: 10
  run_once: true

- name: Check harbor-postgresql Release
  command: |
    /usr/local/bin/linux-amd64/helm --kubeconfig \
    {{ data_path }}/certificates/configs/admin/admin.conf \
    list
  register: check_harbor_postgresql_release
  changed_when: false
  
- name: Create tempdir for harbor
  tempfile:
    state: directory
    suffix: harbor
  register: harbor_tempdir
  changed_when: false
  when: >
    check_harbor_postgresql_release.stdout is not search("harbor-postgresql")

- name: Render templates
  copy:
    dest: "{{ harbor_tempdir.path }}/initdb.yaml"
    src: "initdb.yaml"
  when: >
    check_harbor_postgresql_release.stdout is not search("harbor-postgresql")

- name: Apply templates
  command: kubectl --kubeconfig {{ data_path }}/certificates/configs/admin/admin.conf apply -f {{ harbor_tempdir.path }}/initdb.yaml
  register: apply_harbor
  changed_when: >
    apply_harbor.stdout is search("created")
    or apply_harbor.stdout is search("configured")
  when: >
    check_harbor_postgresql_release.stdout is not search("harbor-postgresql")

- name: Cleanup tempdir
  file:
    state: absent
    path: "{{ harbor_tempdir.path }}"
  changed_when: false
  when: >
    check_harbor_postgresql_release.stdout is not search("harbor-postgresql")

- name: Install harbor-postgresqsl Release
  command: /usr/local/bin/linux-amd64/helm --kubeconfig \
    {{ data_path }}/certificates/configs/admin/admin.conf \
    install --name harbor-postgresql --namespace harbor \
    --set persistence.enabled=true --set persistence.storageClass=rook-ceph-block \
    --set persistence.size=8Gi --set replication.enabled=true \
    --set replication.slaveReplicas=2 --set replication.synchronousCommit=on \
    --set replication.numSynchronousReplicas=1 \
    --set initdbScriptsConfigMap=postgresql-initdb \
    stable/postgresql
  when: >
    check_harbor_postgresql_release.stdout is not search("harbor-postgresql")

- name: Wait for Harbor-Postgresql HA Cluster to be deployed
  command: kubectl --kubeconfig {{ data_path }}/certificates/configs/admin/admin.conf get pod -n harbor harbor-postgresql-slave-1
  changed_when: false
  register: harbor_postgresql_cluster
  until: harbor_postgresql_cluster.stdout.find("1/1") != -1
  retries: 300
  delay: 10
  run_once: true

- name: Check Helm repo Harbor
  command: |
    /usr/local/bin/linux-amd64/helm --kubeconfig \
    {{ data_path }}/certificates/configs/admin/admin.conf \
     repo list
  register: check_helm_repo_harbor
  changed_when: false

- name: Helm install repo harbor
  command: |
    /usr/local/bin/linux-amd64/helm --kubeconfig \
    {{ data_path }}/certificates/configs/admin/admin.conf \
    repo add harbor https://helm.goharbor.io
  when: >
    check_helm_repo_harbor.stdout is not search("harbor")

- name: Check harbor Release
  command: |
    /usr/local/bin/linux-amd64/helm --kubeconfig \
    {{ data_path }}/certificates/configs/admin/admin.conf \
    list
  register: check_harbor_release
  changed_when: false

- name: Create tempdir for harbor
  tempfile:
    state: directory
    suffix: harbor_agora
  register: harbor_agora_tempdir
  changed_when: false
  when: >
    check_harbor_release.stdout is not search("harbor-agora")

- name: Render templates
  template:
    dest: "{{ harbor_agora_tempdir.path }}/deploy-harbor.sh"
    src: deploy-harbor.sh.j2
    mode: 0755
  when: >
    check_harbor_release.stdout is not search("harbor-agora")

- name: Apply templates
  command: "{{ harbor_agora_tempdir.path }}/deploy-harbor.sh" 
  register: apply_harbor_agora
  changed_when: >
    apply_harbor_agora.stdout is search("created")
    or apply_harbor_agora.stdout is search("configured")
  when: >
    check_harbor_release.stdout is not search("harbor-agora")

- name: Cleanup tempdir
  file:
    state: absent
    path: "{{ harbor_agora_tempdir.path }}"
  changed_when: false
  when: >
    check_harbor_release.stdout is not search("harbor-agora")

- name: Wait for Harbor to be deployed
  command: kubectl --kubeconfig {{ data_path }}/certificates/configs/admin/admin.conf get deploy harbor-agora-harbor-core -n harbor
  changed_when: false
  register: harbor_deployment
  until: harbor_deployment.stdout.find("1/1") != -1
  retries: 300
  delay: 10
  run_once: true
