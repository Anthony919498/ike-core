---
- name: Check Helm repo stable
  command: |
    /usr/local/bin/linux-amd64/helm --kubeconfig \
    {{ data_path }}/certificates/configs/admin/admin.conf \
     repo list
  register: check_helm_repo_stable
  changed_when: false

- name: Helm install repo stable
  command: |
    /usr/local/bin/linux-amd64/helm --kubeconfig \
    {{ data_path }}/certificates/configs/admin/admin.conf \
    repo add stable https://kubernetes-charts.storage.googleapis.com
  when: >
    check_helm_repo_stable.stdout is not search("stable")

- name: Check agorakube_prometheus Release
  command: |
    /usr/local/bin/linux-amd64/helm --kubeconfig \
    {{ data_path }}/certificates/configs/admin/admin.conf \
    list
  register: check_agorakube_prometheus_release
  changed_when: false

- name: Install agorakube_prometheus Release
  command: /usr/local/bin/linux-amd64/helm --kubeconfig \
    {{ data_path }}/certificates/configs/admin/admin.conf \
    install --name agorakube-prometheus --namespace agorakube-monitoring \
    --set server.persistentVolume.storageClass=rook-ceph-block \
    --set alertmanager.persistentVolume.storageClass=rook-ceph-block \
    stable/prometheus
  when: >
    check_agorakube_prometheus_release.stdout is not search("agorakube-prometheus")

- name: Wait for agorakube_prometheus to be deployed
  command: kubectl --kubeconfig {{ data_path }}/certificates/configs/admin/admin.conf get deploy -n agorakube-monitoring agorakube-prometheus-server
  changed_when: false
  register: agorakube_prometheus_deployment
  until: agorakube_prometheus_deployment.stdout.find("1/1") != -1
  retries: 300
  delay: 10
  run_once: true

- name: Check agorakube_grafana Release
  command: |
    /usr/local/bin/linux-amd64/helm --kubeconfig \
    {{ data_path }}/certificates/configs/admin/admin.conf \
    list
  register: check_agorakube_grafana_release
  changed_when: false

- name: Install agorakube_grafana Release
  command: /usr/local/bin/linux-amd64/helm --kubeconfig \
    {{ data_path }}/certificates/configs/admin/admin.conf \
    install --name agorakube-grafana --namespace agorakube-monitoring \
    --set persistence.enabled=true --set persistence.storageClassName=rook-ceph-block \
    stable/grafana
  when: >
    check_agorakube_grafana_release.stdout is not search("agorakube-grafana")

- name: Wait for agorakube_prometheus to be deployed
  command: kubectl --kubeconfig {{ data_path }}/certificates/configs/admin/admin.conf get deploy -n agorakube-monitoring agorakube-grafana
  changed_when: false
  register: agorakube_grafana_deployment
  until: agorakube_grafana_deployment.stdout.find("1/1") != -1
  retries: 300
  delay: 10
  run_once: true
